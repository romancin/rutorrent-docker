# Initialize plugins on rtorrent start without opening webui
execute = {sh,-c,/usr/bin/php7 /usr/share/webapps/rutorrent/php/initplugins.php abc &}
execute = {sh,-c,/usr/bin/php7 /usr/share/webapps/rutorrent/php/initplugins.php admin &}

# Instance layout (base paths)
method.insert = cfg.basedir, private|const|string, (cat,"/config/rtorrent/")
method.insert = cfg.watch,   private|const|string, (cat,"/downloads/watch/")
method.insert = cfg.logs,    private|const|string, (cat,"/config/log/rtorrent/")
method.insert = cfg.logfile, private|const|string, (cat,(cfg.logs),"rtorrent.log")

# Listening port for incoming peer traffic (fixed; you can also randomize it)
network.port_range.set = 51415-51415
network.port_random.set = no

# Directory Management
session.path.set = (cat, (cfg.basedir), "rtorrent_sess")
directory.default.set = (cat,"/downloads/")

# Logging:
#   Levels = critical error warn notice info debug
#   Groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_*
log.execute = (cat, (cfg.logs), "execute.log")
print = (cat, "Logging to ", (cfg.logfile))
log.open_file = "log", (cfg.logfile)
log.add_output = "info", "log"
#log.add_output = "tracker_debug", "log"

# Prepare rtorrent communication socket
execute.nothrow = rm,/run/php/.rtorrent.sock
network.scgi.open_local = /run/php/.rtorrent.sock
schedule = socket_chmod,0,0,"execute=chmod,0660,/run/php/.rtorrent.sock"
schedule = socket_chgrp,0,0,"execute=chgrp,abc,/run/php/.rtorrent.sock"

# Other operational settings (check & adapt)
system.cwd.set = (directory.default)
network.http.dns_cache_timeout.set = 25
#network.http.capath.set = "/etc/ssl/certs"
#network.http.ssl_verify_peer.set = 0
#network.http.ssl_verify_host.set = 0
#keys.layout.set = qwerty

# Maximum and minimum number of peers to connect to per torrent
throttle.min_peers.normal.set = 1
throttle.max_peers.normal.set = 150

# Same as above but for seeding completed torrents (-1 = same as downloading)
throttle.min_peers.seed.set = -1
throttle.max_peers.seed.set = -1

# Maximum number of simultanious uploads per torrent
throttle.max_uploads.set = 250

# Global upload and download rate in KiB. "0" for unlimited
throttle.global_down.max_rate.set_kb = 0
throttle.global_up.max_rate.set_kb = 0

# Maximum number of simultaneous downloads and uploads slots (global slots!) (`max_downloads_global`, `max_uploads_global`)
throttle.max_downloads.global.set = 0
throttle.max_uploads.global.set   = 0

# Enable DHT support for trackerless torrents or when all trackers are down
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately)
dht.mode.set = off

# Enable peer exchange (for torrents not marked private)
protocol.pex.set = no

# Check hash for finished torrents. Might be usefull until the bug is
# fixed that causes lack of diskspace not to be properly reported
pieces.hash.on_completion.set = no

# Set whether the client should try to connect to UDP trackers
trackers.use_udp.set = yes

# Whether to allocate disk space for a new torrent. Default: `0`
system.file.allocate.set = 1

# Preloading a piece of a file. Default: `0` Possible values: `0` (Off) , `1` (Madvise) , `2` (Direct paging).
pieces.preload.type.set = 2
#pieces.preload.min_size.set = 262144
#pieces.preload.min_rate.set = 5120

# Memory resource usage (increase if you have a large number of items loaded,
# and/or the available resources to spend)
pieces.memory.max.set = 4G
network.xmlrpc.size_limit.set = 4M

# Alternative calls to bind and ip that should handle dynamic ip's
#schedule2 = ip_tick,0,1800,ip=rakshasa
#schedule2 = bind_tick,0,1800,bind=rakshasa

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
protocol.encryption.set = allow_incoming,try_outgoing,enable_retry

# Set the umask for this process, which is applied to all files created by the program
system.umask.set = 0022

# Add a preferred filename encoding to the list
encoding.add = utf8

# Watch a directory for new torrents, and stop those that have been deleted
schedule2 = watch_directory_99,10,10,(cat,"load.start=",(cfg.watch),"*.torrent,d.custom1.set=/downloads/completed/")
#schedule2 = untied_directory, 5, 5, (cat,"stop_untied=",(cfg.watch),"*.torrent")

# watch subdirectory by tracker
schedule2 = watch_directory_1,10,10,(cat,"load.start=",(cfg.watch),"/bajaunapeli/*.torrent,d.directory.set=/downloads/bajaunapeli/")
schedule2 = watch_directory_2,10,10,(cat,"load.start=",(cfg.watch),"/bitspyder/*.torrent,d.directory.set=/downloads/bitspyder/")
schedule2 = watch_directory_3,10,10,(cat,"load.start=",(cfg.watch),"/torrentfactory/*.torrent,d.directory.set=/downloads/torrentfactory/")
schedule2 = watch_directory_4,10,10,(cat,"load.start=",(cfg.watch),"/hachede/*.torrent,d.directory.set=/downloads/hachede/")
schedule2 = watch_directory_5,10,10,(cat,"load.start=",(cfg.watch),"/hdcity/*.torrent,d.directory.set=/downloads/hdcity/")
schedule2 = watch_directory_6,10,10,(cat,"load.start=",(cfg.watch),"/learnflakes/*.torrent,d.directory.set=/downloads/learnflakes/")
schedule2 = watch_directory_7,10,10,(cat,"load.start=",(cfg.watch),"/puntotorrent/*.torrent,d.directory.set=/downloads/puntotorrent/")
schedule2 = watch_directory_8,10,10,(cat,"load.start=",(cfg.watch),"/tbplus/*.torrent,d.directory.set=/downloads/tbplus/")
schedule2 = watch_directory_9,10,10,(cat,"load.start=",(cfg.watch),"/waffles/*.torrent,d.directory.set=/downloads/waffles/")
schedule2 = watch_directory_11,10,10,(cat,"load.start=",(cfg.watch),"/xbytes/*.torrent,d.directory.set=/downloads/xbytes/")
schedule2 = watch_directory_12,10,10,(cat,"load.start=",(cfg.watch),"/otros/*.torrent,d.directory.set=/downloads/otros/")
schedule2 = watch_directory_13,10,10,(cat,"load.start=",(cfg.watch),"/pedros/*.torrent,d.directory.set=/downloads/pedros/")
schedule2 = watch_directory_14,10,10,(cat,"load.start=",(cfg.watch),"/cinemaggedon/*.torrent,d.directory.set=/downloads/cinemaggedon/")
schedule2 = watch_directory_15,10,10,(cat,"load.start=",(cfg.watch),"/torrentland/*.torrent,d.directory.set=/downloads/torrentland/")
schedule2 = watch_directory_16,10,10,(cat,"load.start=",(cfg.watch),"/tunetraxx/*.torrent,d.directory.set=/downloads/tunetraxx/")
schedule2 = watch_directory_17,10,10,(cat,"load.start=",(cfg.watch),"/brokenstones/*.torrent,d.directory.set=/downloads/brokenstones/")
schedule2 = watch_directory_18,10,10,(cat,"load.start=",(cfg.watch),"/32pages/*.torrent,d.directory.set=/downloads/32pages/")
schedule2 = watch_directory_19,10,10,(cat,"load.start=",(cfg.watch),"/lztr/*.torrent,d.directory.set=/downloads/lztr/")
schedule2 = watch_directory_20,10,10,(cat,"load.start=",(cfg.watch),"/p2pelite/*.torrent,d.directory.set=/downloads/p2pelite/")
schedule2 = watch_directory_21,10,10,(cat,"load.start=",(cfg.watch),"/bitgamer/*.torrent,d.directory.set=/downloads/bitgamer/")
schedule2 = watch_directory_22,10,10,(cat,"load.start=",(cfg.watch),"/psytorrents/*.torrent,d.directory.set=/downloads/psytorrents/")
schedule2 = watch_directory_23,10,10,(cat,"load.start=",(cfg.watch),"/pleasuredome/*.torrent,d.directory.set=/downloads/pleasuredome/")
schedule2 = watch_directory_24,10,10,(cat,"load.start=",(cfg.watch),"/hdspain/*.torrent,d.directory.set=/downloads/hdspain/")
schedule2 = watch_directory_25,10,10,(cat,"load.start=",(cfg.watch),"/iptorrents/*.torrent,d.directory.set=/downloads/iptorrents/")
schedule2 = watch_directory_26,10,10,(cat,"load.start=",(cfg.watch),"/trancetraffic/*.torrent,d.directory.set=/downloads/trancetraffic/")
schedule2 = watch_directory_27,10,10,(cat,"load.start=",(cfg.watch),"/morethantv/*.torrent,d.directory.set=/downloads/morethantv/")
schedule2 = watch_directory_28,10,10,(cat,"load.start=",(cfg.watch),"/passthepopcorn/*.torrent,d.directory.set=/downloads/passthepopcorn/")
schedule2 = watch_directory_29,10,10,(cat,"load.start=",(cfg.watch),"/gp32spain/*.torrent,d.directory.set=/downloads/gp32spain/")
schedule2 = watch_directory_30,10,10,(cat,"load.start=",(cfg.watch),"/gazellegames/*.torrent,d.directory.set=/downloads/gazellegames/")
schedule2 = watch_directory_31,10,10,(cat,"load.start=",(cfg.watch),"/opencd/*.torrent,d.directory.set=/downloads/opencd/")
schedule2 = watch_directory_32,10,10,(cat,"load.start=",(cfg.watch),"/mteam/*.torrent,d.directory.set=/downloads/mteam/")
schedule2 = watch_directory_33,10,10,(cat,"load.start=",(cfg.watch),"/retrowithin/*.torrent,d.directory.set=/downloads/retrowithin/")
schedule2 = watch_directory_34,10,10,(cat,"load.start=",(cfg.watch),"/divteam/*.torrent,d.directory.set=/downloads/divteam/")
schedule2 = watch_directory_35,10,10,(cat,"load.start=",(cfg.watch),"/racingforme/*.torrent,d.directory.set=/downloads/racingforme/")
schedule2 = watch_directory_36,10,10,(cat,"load.start=",(cfg.watch),"/bibliotik/*.torrent,d.directory.set=/downloads/bibliotik/")
schedule2 = watch_directory_37,10,10,(cat,"load.start=",(cfg.watch),"/beyondhd/*.torrent,d.directory.set=/downloads/beyondhd/")
schedule2 = watch_directory_38,10,10,(cat,"load.start=",(cfg.watch),"/myanonamouse/*.torrent,d.directory.set=/downloads/myanonamouse/")
schedule2 = watch_directory_39,10,10,(cat,"load.start=",(cfg.watch),"/ultimategamer/*.torrent,d.directory.set=/downloads/ultimategamer/")
schedule2 = watch_directory_40,10,10,(cat,"load.start=",(cfg.watch),"/ultimategamer/*.torrent,d.directory.set=/downloads/ultimategamer/")
schedule2 = watch_directory_41,10,10,(cat,"load.start=",(cfg.watch),"/x264/*.torrent,d.directory.set=/downloads/x264/")
schedule2 = watch_directory_42,10,10,(cat,"load.start=",(cfg.watch),"/awesomehd/*.torrent,d.directory.set=/downloads/awesomehd/")
schedule2 = watch_directory_43,10,10,(cat,"load.start=",(cfg.watch),"/broadcasthenet/*.torrent,d.directory.set=/downloads/broadcasthenet/")
schedule2 = watch_directory_44,10,10,(cat,"load.start=",(cfg.watch),"/bitme/*.torrent,d.directory.set=/downloads/bitme/")
schedule2 = watch_directory_45,10,10,(cat,"load.start=",(cfg.watch),"/theplace/*.torrent,d.directory.set=/downloads/theplace/")
schedule2 = watch_directory_46,10,10,(cat,"load.start=",(cfg.watch),"/theshow/*.torrent,d.directory.set=/downloads/theshow/")
schedule2 = watch_directory_47,10,10,(cat,"load.start=",(cfg.watch),"/thegeeks/*.torrent,d.directory.set=/downloads/thegeeks/")
schedule2 = watch_directory_48,10,10,(cat,"load.start=",(cfg.watch),"/thevault/*.torrent,d.directory.set=/downloads/thevault/")
schedule2 = watch_directory_49,10,10,(cat,"load.start=",(cfg.watch),"/theempire/*.torrent,d.directory.set=/downloads/theempire/")
schedule2 = watch_directory_50,10,10,(cat,"load.start=",(cfg.watch),"/theoccult/*.torrent,d.directory.set=/downloads/theoccult/")
schedule2 = watch_directory_51,10,10,(cat,"load.start=",(cfg.watch),"/torrentleech/*.torrent,d.directory.set=/downloads/torrentleech/")
schedule2 = watch_directory_52,10,10,(cat,"load.start=",(cfg.watch),"/hdbits/*.torrent,d.directory.set=/downloads/hdbits/")
schedule2 = watch_directory_53,10,10,(cat,"load.start=",(cfg.watch),"/zonaq/*.torrent,d.directory.set=/downloads/zonaq/")
schedule2 = watch_directory_54,10,10,(cat,"load.start=",(cfg.watch),"/torrentech/*.torrent,d.directory.set=/downloads/torrentech/")
schedule2 = watch_directory_55,10,10,(cat,"load.start=",(cfg.watch),"/sceneaccess/*.torrent,d.directory.set=/downloads/sceneaccess/")
schedule2 = watch_directory_56,10,10,(cat,"load.start=",(cfg.watch),"/efectodoppler/*.torrent,d.directory.set=/downloads/efectodoppler/")
schedule2 = watch_directory_57,10,10,(cat,"load.start=",(cfg.watch),"/musicvids/*.torrent,d.directory.set=/downloads/musicvids/")
schedule2 = watch_directory_58,10,10,(cat,"load.start=",(cfg.watch),"/apollo/*.torrent,d.directory.set=/downloads/apollo/")
schedule2 = watch_directory_59,10,10,(cat,"load.start=",(cfg.watch),"/passtheheadphones/*.torrent,d.directory.set=/downloads/passtheheadphones/")
schedule2 = watch_directory_60,10,10,(cat,"load.start=",(cfg.watch),"/notwhatcd/*.torrent,d.directory.set=/downloads/notwhatcd/")

# Close torrents when diskspace is low
schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace,1000M))

# Move finished (no need Autotools/Automove plugin on ruTorrent)
method.insert = d.move_to_complete, simple, "d.directory.set=$argument.1=; execute=mkdir,-p,$argument.1=; execute=mv,-u,$argument.0=,$argument.1=; d.save_full_session="
method.set_key = event.download.finished,move_complete,"d.move_to_complete=$d.data_path=,$d.custom1="

# Commit session data
schedule2 = session_save,240,300,session_save=

# Erase data when torrent deleted (no need erasedata plugin on ruTorrent)
#method.set_key = event.download.erased,delete_erased,"execute=rm,-rf,--,$d.data_path="

# Telegram Notifications
#method.set_key = event.download.finished,notify_me,"execute=/config/rtorrent/notify_telegram.sh,$d.name="

#
# PyroScope SETTINGS
#
method.insert = cfg.pyroscope, private|const|string, (cat,"/config/.pyroscope/")

# `system.has` polyfill (the "false=" silences the `catch` command, in rTorrent-PS)
catch = {"false=", "method.redirect=system.has,false"}

# Set "pyro.extended" to 1 to activate rTorrent-PS features!
# (the automatic way used here only works with rTorrent-PS builds after 2018-05-30)
method.insert = pyro.extended, const|value, (system.has, rtorrent-ps)

# Set "pyro.bin_dir" to the "bin" directory where you installed the pyrocore tools!
# Make sure you end it with a "/"; if this is left empty, then the shell's path is searched.
method.insert = pyro.bin_dir, string|const, /config/bin/

# Remove the ".default" if you want to change something (else your changes
# get over-written on update, when you put them into ``*.default`` files).
#import = ~/.pyroscope/rtorrent-pyro.rc.default
#execute.throw = (cat,(pyro.bin_dir),pyroadmin),-q,--create-import,(cat,(cfg.pyroscope),"rtorrent.d/*.rc")
import = (cat,(cfg.pyroscope),"rtorrent.d/.import.rc")

# TORQUE: Daemon watchdog schedule
# Must be activated by touching the "~/.pyroscope/run/pyrotorque" file!
# Set the second argument to "-v" or "-q" to change log verbosity.
schedule = pyro_watchdog,30,300,"pyro.watchdog=~/.pyroscope,"

# Log completed torrents for rtelegram
method.set_key = event.download.finished, log_completed, \
	"execute.nothrow = sh, -c, \"echo >> /logs/completed.log \\\"$0\\\"\", $d.name="
